{"version":3,"file":"leaflet-roughcanvas.js","sources":["../node_modules/roughjs/src/segment.js","../node_modules/roughjs/src/hachure.js","../node_modules/roughjs/src/path.js","../node_modules/roughjs/src/renderer.js","../node_modules/roughjs/src/canvas.js","../node_modules/roughjs/src/index.js","../src/main.js"],"sourcesContent":["export function RoughSegmentRelation() {\n  return {\n    LEFT: 0,\n    RIGHT: 1,\n    INTERSECTS: 2,\n    AHEAD: 3,\n    BEHIND: 4,\n    SEPARATE: 5,\n    UNDEFINED: 6\n  };\n}\n\nexport class RoughSegment {\n  constructor(px1, py1, px2, py2) {\n    this.RoughSegmentRelationConst = RoughSegmentRelation();\n    this.px1 = px1;\n    this.py1 = py1;\n    this.px2 = px2;\n    this.py2 = py2;\n    this.xi = Number.MAX_VALUE;\n    this.yi = Number.MAX_VALUE;\n    this.a = py2 - py1;\n    this.b = px1 - px2;\n    this.c = px2 * py1 - px1 * py2;\n    this._undefined = ((this.a == 0) && (this.b == 0) && (this.c == 0));\n  }\n\n  isUndefined() {\n    return this._undefined;\n  }\n\n  compare(otherSegment) {\n    if (this.isUndefined() || otherSegment.isUndefined()) {\n      return this.RoughSegmentRelationConst.UNDEFINED;\n    }\n    var grad1 = Number.MAX_VALUE;\n    var grad2 = Number.MAX_VALUE;\n    var int1 = 0, int2 = 0;\n    var a = this.a, b = this.b, c = this.c;\n\n    if (Math.abs(b) > 0.00001) {\n      grad1 = -a / b;\n      int1 = -c / b;\n    }\n    if (Math.abs(otherSegment.b) > 0.00001) {\n      grad2 = -otherSegment.a / otherSegment.b;\n      int2 = -otherSegment.c / otherSegment.b;\n    }\n\n    if (grad1 == Number.MAX_VALUE) {\n      if (grad2 == Number.MAX_VALUE) {\n        if ((-c / a) != (-otherSegment.c / otherSegment.a)) {\n          return this.RoughSegmentRelationConst.SEPARATE;\n        }\n        if ((this.py1 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n          this.xi = this.px1;\n          this.yi = this.py1;\n          return this.RoughSegmentRelationConst.INTERSECTS;\n        }\n        if ((this.py2 >= Math.min(otherSegment.py1, otherSegment.py2)) && (this.py2 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n          this.xi = this.px2;\n          this.yi = this.py2;\n          return this.RoughSegmentRelationConst.INTERSECTS;\n        }\n        return this.RoughSegmentRelationConst.SEPARATE;\n      }\n      this.xi = this.px1;\n      this.yi = (grad2 * this.xi + int2);\n      if (((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001) || ((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001)) {\n        return this.RoughSegmentRelationConst.SEPARATE;\n      }\n      if (Math.abs(otherSegment.a) < 0.00001) {\n        if ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001) {\n          return this.RoughSegmentRelationConst.SEPARATE;\n        }\n        return this.RoughSegmentRelationConst.INTERSECTS;\n      }\n      return this.RoughSegmentRelationConst.INTERSECTS;\n    }\n\n    if (grad2 == Number.MAX_VALUE) {\n      this.xi = otherSegment.px1;\n      this.yi = grad1 * this.xi + int1;\n      if (((otherSegment.py1 - this.yi) * (this.yi - otherSegment.py2) < -0.00001) || ((this.py1 - this.yi) * (this.yi - this.py2) < -0.00001)) {\n        return this.RoughSegmentRelationConst.SEPARATE;\n      }\n      if (Math.abs(a) < 0.00001) {\n        if ((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) {\n          return this.RoughSegmentRelationConst.SEPARATE;\n        }\n        return this.RoughSegmentRelationConst.INTERSECTS;\n      }\n      return this.RoughSegmentRelationConst.INTERSECTS;\n    }\n\n    if (grad1 == grad2) {\n      if (int1 != int2) {\n        return this.RoughSegmentRelationConst.SEPARATE;\n      }\n      if ((this.px1 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px1 <= Math.max(otherSegment.py1, otherSegment.py2))) {\n        this.xi = this.px1;\n        this.yi = this.py1;\n        return this.RoughSegmentRelationConst.INTERSECTS;\n      }\n      if ((this.px2 >= Math.min(otherSegment.px1, otherSegment.px2)) && (this.px2 <= Math.max(otherSegment.px1, otherSegment.px2))) {\n        this.xi = this.px2;\n        this.yi = this.py2;\n        return this.RoughSegmentRelationConst.INTERSECTS;\n      }\n      return this.RoughSegmentRelationConst.SEPARATE;\n    }\n\n    this.xi = ((int2 - int1) / (grad1 - grad2));\n    this.yi = (grad1 * this.xi + int1);\n\n    if (((this.px1 - this.xi) * (this.xi - this.px2) < -0.00001) || ((otherSegment.px1 - this.xi) * (this.xi - otherSegment.px2) < -0.00001)) {\n      return this.RoughSegmentRelationConst.SEPARATE;\n    }\n    return this.RoughSegmentRelationConst.INTERSECTS;\n  }\n\n  getLength() {\n    return this._getLength(this.px1, this.py1, this.px2, this.py2);\n  }\n\n  _getLength(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n}","import { RoughSegmentRelation, RoughSegment } from \"./segment\";\n\nexport class RoughHachureIterator {\n  constructor(top, bottom, left, right, gap, sinAngle, cosAngle, tanAngle) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n    this.gap = gap;\n    this.sinAngle = sinAngle;\n    this.tanAngle = tanAngle;\n\n    if (Math.abs(sinAngle) < 0.0001) {\n      this.pos = left + gap;\n    } else if (Math.abs(sinAngle) > 0.9999) {\n      this.pos = top + gap;\n    } else {\n      this.deltaX = (bottom - top) * Math.abs(tanAngle);\n      this.pos = left - Math.abs(this.deltaX);\n      this.hGap = Math.abs(gap / cosAngle);\n      this.sLeft = new RoughSegment(left, bottom, left, top);\n      this.sRight = new RoughSegment(right, bottom, right, top);\n    }\n  }\n\n  getNextLine() {\n    if (Math.abs(this.sinAngle) < 0.0001) {\n      if (this.pos < this.right) {\n        let line = [this.pos, this.top, this.pos, this.bottom];\n        this.pos += this.gap;\n        return line;\n      }\n    } else if (Math.abs(this.sinAngle) > 0.9999) {\n      if (this.pos < this.bottom) {\n        let line = [this.left, this.pos, this.right, this.pos];\n        this.pos += this.gap;\n        return line;\n      }\n    } else {\n      let xLower = this.pos - this.deltaX / 2;\n      let xUpper = this.pos + this.deltaX / 2;\n      let yLower = this.bottom;\n      let yUpper = this.top;\n      if (this.pos < (this.right + this.deltaX)) {\n        while (((xLower < this.left) && (xUpper < this.left)) || ((xLower > this.right) && (xUpper > this.right))) {\n          this.pos += this.hGap;\n          xLower = this.pos - this.deltaX / 2;\n          xUpper = this.pos + this.deltaX / 2;\n          if (this.pos > (this.right + this.deltaX)) {\n            return null;\n          }\n        }\n        let s = new RoughSegment(xLower, yLower, xUpper, yUpper);\n        if (s.compare(this.sLeft) == RoughSegmentRelation().INTERSECTS) {\n          xLower = s.xi;\n          yLower = s.yi;\n        }\n        if (s.compare(this.sRight) == RoughSegmentRelation().INTERSECTS) {\n          xUpper = s.xi;\n          yUpper = s.yi;\n        }\n        if (this.tanAngle > 0) {\n          xLower = this.right - (xLower - this.left);\n          xUpper = this.right - (xUpper - this.left);\n        }\n        let line = [xLower, yLower, xUpper, yUpper];\n        this.pos += this.hGap;\n        return line;\n      }\n    }\n    return null;\n  }\n}","class PathToken {\n  constructor(type, text) {\n    this.type = type;\n    this.text = text;\n  }\n  isType(type) {\n    return this.type === type;\n  }\n}\n\nclass ParsedPath {\n  constructor(d) {\n    this.PARAMS = {\n      A: [\"rx\", \"ry\", \"x-axis-rotation\", \"large-arc-flag\", \"sweep-flag\", \"x\", \"y\"],\n      a: [\"rx\", \"ry\", \"x-axis-rotation\", \"large-arc-flag\", \"sweep-flag\", \"x\", \"y\"],\n      C: [\"x1\", \"y1\", \"x2\", \"y2\", \"x\", \"y\"],\n      c: [\"x1\", \"y1\", \"x2\", \"y2\", \"x\", \"y\"],\n      H: [\"x\"],\n      h: [\"x\"],\n      L: [\"x\", \"y\"],\n      l: [\"x\", \"y\"],\n      M: [\"x\", \"y\"],\n      m: [\"x\", \"y\"],\n      Q: [\"x1\", \"y1\", \"x\", \"y\"],\n      q: [\"x1\", \"y1\", \"x\", \"y\"],\n      S: [\"x2\", \"y2\", \"x\", \"y\"],\n      s: [\"x2\", \"y2\", \"x\", \"y\"],\n      T: [\"x\", \"y\"],\n      t: [\"x\", \"y\"],\n      V: [\"y\"],\n      v: [\"y\"],\n      Z: [],\n      z: []\n    };\n    this.COMMAND = 0;\n    this.NUMBER = 1;\n    this.EOD = 2;\n    this.segments = [];\n    this.d = d || \"\";\n    this.parseData(d);\n    this.processPoints();\n  }\n\n  loadFromSegments(segments) {\n    this.segments = segments;\n    this.processPoints();\n  }\n\n  processPoints() {\n    let first = null, prev = null, currentPoint = [0, 0];\n    for (let i = 0; i < this.segments.length; i++) {\n      let s = this.segments[i];\n      switch (s.key) {\n        case 'M':\n        case 'L':\n        case 'T':\n          s.point = [s.data[0], s.data[1]];\n          break;\n        case 'm':\n        case 'l':\n        case 't':\n          s.point = [s.data[0] + currentPoint[0], s.data[1] + currentPoint[1]];\n          break;\n        case 'H':\n          s.point = [s.data[0], currentPoint[1]];\n          break;\n        case 'h':\n          s.point = [s.data[0] + currentPoint[0], currentPoint[1]];\n          break;\n        case 'V':\n          s.point = [currentPoint[0], s.data[0]];\n          break;\n        case 'v':\n          s.point = [currentPoint[0], s.data[0] + currentPoint[1]];\n          break;\n        case 'z':\n        case 'Z':\n          if (first) {\n            s.point = [first[0], first[1]];\n          }\n          break;\n        case 'C':\n          s.point = [s.data[4], s.data[5]];\n          break;\n        case 'c':\n          s.point = [s.data[4] + currentPoint[0], s.data[5] + currentPoint[1]];\n          break;\n        case 'S':\n          s.point = [s.data[2], s.data[3]];\n          break;\n        case 's':\n          s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n          break;\n        case 'Q':\n          s.point = [s.data[2], s.data[3]];\n          break;\n        case 'q':\n          s.point = [s.data[2] + currentPoint[0], s.data[3] + currentPoint[1]];\n          break;\n        case 'A':\n          s.point = [s.data[5], s.data[6]];\n          break;\n        case 'a':\n          s.point = [s.data[5] + currentPoint[0], s.data[6] + currentPoint[1]];\n          break;\n      }\n      if (s.key === 'm' || s.key === 'M') {\n        first = null;\n      }\n      if (s.point) {\n        currentPoint = s.point;\n        if (!first) {\n          first = s.point;\n        }\n      }\n      if (s.key === 'z' || s.key === 'Z') {\n        first = null;\n      }\n      prev = s;\n    }\n  }\n\n  get closed() {\n    if (typeof this._closed === 'undefined') {\n      this._closed = false;\n      for (let s of this.segments) {\n        if (s.key.toLowerCase() === 'z') {\n          this._closed = true;\n        }\n      }\n    }\n    return this._closed;\n  }\n\n  parseData(d) {\n    var tokens = this.tokenize(d);\n    var index = 0;\n    var token = tokens[index];\n    var mode = \"BOD\";\n    this.segments = new Array();\n    while (!token.isType(this.EOD)) {\n      var param_length;\n      var params = new Array();\n      if (mode == \"BOD\") {\n        if (token.text == \"M\" || token.text == \"m\") {\n          index++;\n          param_length = this.PARAMS[token.text].length;\n          mode = token.text;\n        } else {\n          return this.parseData('M0,0' + d);\n        }\n      } else {\n        if (token.isType(this.NUMBER)) {\n          param_length = this.PARAMS[mode].length;\n        } else {\n          index++;\n          param_length = this.PARAMS[token.text].length;\n          mode = token.text;\n        }\n      }\n\n      if ((index + param_length) < tokens.length) {\n        for (var i = index; i < index + param_length; i++) {\n          var number = tokens[i];\n          if (number.isType(this.NUMBER)) {\n            params[params.length] = number.text;\n          }\n          else {\n            console.error(\"Parameter type is not a number: \" + mode + \",\" + number.text);\n            return;\n          }\n        }\n        var segment;\n        if (this.PARAMS[mode]) {\n          segment = { key: mode, data: params };\n        } else {\n          console.error(\"Unsupported segment type: \" + mode);\n          return;\n        }\n        this.segments.push(segment);\n        index += param_length;\n        token = tokens[index];\n        if (mode == \"M\") mode = \"L\";\n        if (mode == \"m\") mode = \"l\";\n      } else {\n        console.error(\"Path data ended before all parameters were found\");\n      }\n    }\n  }\n\n  tokenize(d) {\n    var tokens = new Array();\n    while (d != \"\") {\n      if (d.match(/^([ \\t\\r\\n,]+)/)) {\n        d = d.substr(RegExp.$1.length);\n      } else if (d.match(/^([aAcChHlLmMqQsStTvVzZ])/)) {\n        tokens[tokens.length] = new PathToken(this.COMMAND, RegExp.$1);\n        d = d.substr(RegExp.$1.length);\n      } else if (d.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/)) {\n        tokens[tokens.length] = new PathToken(this.NUMBER, parseFloat(RegExp.$1));\n        d = d.substr(RegExp.$1.length);\n      } else {\n        console.error(\"Unrecognized segment command: \" + d);\n        return null;\n      }\n    }\n    tokens[tokens.length] = new PathToken(this.EOD, null);\n    return tokens;\n  }\n}\n\nexport class RoughPath {\n  constructor(d) {\n    this.d = d;\n    this.parsed = new ParsedPath(d);\n    this._position = [0, 0];\n    this.bezierReflectionPoint = null;\n    this.quadReflectionPoint = null;\n    this._first = null;\n  }\n\n  get segments() {\n    return this.parsed.segments;\n  }\n\n  get closed() {\n    return this.parsed.closed;\n  }\n\n  get linearPoints() {\n    if (!this._linearPoints) {\n      const lp = [];\n      let points = [];\n      for (let s of this.parsed.segments) {\n        let key = s.key.toLowerCase();\n        if (key === 'm' || key === 'z') {\n          if (points.length) {\n            lp.push(points);\n            points = [];\n          }\n          if (key === 'z') {\n            continue;\n          }\n        }\n        if (s.point) {\n          points.push(s.point);\n        }\n      }\n      if (points.length) {\n        lp.push(points);\n        points = [];\n      }\n      this._linearPoints = lp;\n    }\n    return this._linearPoints;\n  }\n\n  get first() {\n    return this._first;\n  }\n\n  set first(v) {\n    this._first = v;\n  }\n\n  setPosition(x, y) {\n    this._position = [x, y];\n    if (!this._first) {\n      this._first = [x, y];\n    }\n  }\n\n  get position() {\n    return this._position;\n  }\n\n  get x() {\n    return this._position[0];\n  }\n\n  get y() {\n    return this._position[1];\n  }\n}\n\nexport class RoughArcConverter {\n  // Algorithm as described in https://www.w3.org/TR/SVG/implnote.html\n  // Code adapted from nsSVGPathDataParser.cpp in Mozilla \n  // https://hg.mozilla.org/mozilla-central/file/17156fbebbc8/content/svg/content/src/nsSVGPathDataParser.cpp#l887\n  constructor(from, to, radii, angle, largeArcFlag, sweepFlag) {\n    const radPerDeg = Math.PI / 180;\n    this._segIndex = 0;\n    this._numSegs = 0;\n    if (from[0] == to[0] && from[1] == to[1]) {\n      return;\n    }\n    this._rx = Math.abs(radii[0]);\n    this._ry = Math.abs(radii[1]);\n    this._sinPhi = Math.sin(angle * radPerDeg);\n    this._cosPhi = Math.cos(angle * radPerDeg);\n    var x1dash = this._cosPhi * (from[0] - to[0]) / 2.0 + this._sinPhi * (from[1] - to[1]) / 2.0;\n    var y1dash = -this._sinPhi * (from[0] - to[0]) / 2.0 + this._cosPhi * (from[1] - to[1]) / 2.0;\n    var root;\n    var numerator = this._rx * this._rx * this._ry * this._ry - this._rx * this._rx * y1dash * y1dash - this._ry * this._ry * x1dash * x1dash;\n    if (numerator < 0) {\n      let s = Math.sqrt(1 - (numerator / (this._rx * this._rx * this._ry * this._ry)));\n      this._rx = s;\n      this._ry = s;\n      root = 0;\n    } else {\n      root = (largeArcFlag == sweepFlag ? -1.0 : 1.0) *\n        Math.sqrt(numerator / (this._rx * this._rx * y1dash * y1dash + this._ry * this._ry * x1dash * x1dash));\n    }\n    let cxdash = root * this._rx * y1dash / this._ry;\n    let cydash = -root * this._ry * x1dash / this._rx;\n    this._C = [0, 0];\n    this._C[0] = this._cosPhi * cxdash - this._sinPhi * cydash + (from[0] + to[0]) / 2.0;\n    this._C[1] = this._sinPhi * cxdash + this._cosPhi * cydash + (from[1] + to[1]) / 2.0;\n    this._theta = this.calculateVectorAngle(1.0, 0.0, (x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry);\n    let dtheta = this.calculateVectorAngle((x1dash - cxdash) / this._rx, (y1dash - cydash) / this._ry, (-x1dash - cxdash) / this._rx, (-y1dash - cydash) / this._ry);\n    if ((!sweepFlag) && (dtheta > 0)) {\n      dtheta -= 2 * Math.PI;\n    } else if (sweepFlag && (dtheta < 0)) {\n      dtheta += 2 * Math.PI;\n    }\n    this._numSegs = Math.ceil(Math.abs(dtheta / (Math.PI / 2)));\n    this._delta = dtheta / this._numSegs;\n    this._T = (8 / 3) * Math.sin(this._delta / 4) * Math.sin(this._delta / 4) / Math.sin(this._delta / 2);\n    this._from = from;\n  }\n\n  getNextSegment() {\n    var cp1, cp2, to;\n    if (this._segIndex == this._numSegs) {\n      return null;\n    }\n    let cosTheta1 = Math.cos(this._theta);\n    let sinTheta1 = Math.sin(this._theta);\n    let theta2 = this._theta + this._delta;\n    let cosTheta2 = Math.cos(theta2);\n    let sinTheta2 = Math.sin(theta2);\n\n    to = [\n      this._cosPhi * this._rx * cosTheta2 - this._sinPhi * this._ry * sinTheta2 + this._C[0],\n      this._sinPhi * this._rx * cosTheta2 + this._cosPhi * this._ry * sinTheta2 + this._C[1]\n    ];\n    cp1 = [\n      this._from[0] + this._T * (- this._cosPhi * this._rx * sinTheta1 - this._sinPhi * this._ry * cosTheta1),\n      this._from[1] + this._T * (- this._sinPhi * this._rx * sinTheta1 + this._cosPhi * this._ry * cosTheta1)\n    ];\n    cp2 = [\n      to[0] + this._T * (this._cosPhi * this._rx * sinTheta2 + this._sinPhi * this._ry * cosTheta2),\n      to[1] + this._T * (this._sinPhi * this._rx * sinTheta2 - this._cosPhi * this._ry * cosTheta2)\n    ];\n\n    this._theta = theta2;\n    this._from = [to[0], to[1]];\n    this._segIndex++;\n\n    return {\n      cp1: cp1,\n      cp2: cp2,\n      to: to\n    };\n  }\n\n  calculateVectorAngle(ux, uy, vx, vy) {\n    let ta = Math.atan2(uy, ux);\n    let tb = Math.atan2(vy, vx);\n    if (tb >= ta)\n      return tb - ta;\n    return 2 * Math.PI - (ta - tb);\n  }\n}\n\nexport class PathFitter {\n  constructor(sets, closed) {\n    this.sets = sets;\n    this.closed = closed;\n  }\n\n  fit(simplification) {\n    let outSets = [];\n    for (const set of this.sets) {\n      let length = set.length;\n      let estLength = Math.floor(simplification * length);\n      if (estLength < 5) {\n        if (length <= 5) {\n          continue;\n        }\n        estLength = 5;\n      }\n      outSets.push(this.reduce(set, estLength));\n    }\n\n    let d = '';\n    for (const set of outSets) {\n      for (let i = 0; i < set.length; i++) {\n        let point = set[i];\n        if (i === 0) {\n          d += 'M' + point[0] + \",\" + point[1];\n        } else {\n          d += 'L' + point[0] + \",\" + point[1];\n        }\n      }\n      if (this.closed) {\n        d += 'z ';\n      }\n    }\n    return d;\n  }\n\n  distance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2));\n  }\n\n  reduce(set, count) {\n    if (set.length <= count) {\n      return set;\n    }\n    let points = set.slice(0);\n    while (points.length > count) {\n      let areas = [];\n      let minArea = -1;\n      let minIndex = -1;\n      for (let i = 1; i < (points.length - 1); i++) {\n        let a = this.distance(points[i - 1], points[i]);\n        let b = this.distance(points[i], points[i + 1]);\n        let c = this.distance(points[i - 1], points[i + 1]);\n        let s = (a + b + c) / 2.0;\n        let area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        areas.push(area);\n        if ((minArea < 0) || (area < minArea)) {\n          minArea = area;\n          minIndex = i;\n        }\n      }\n      if (minIndex > 0) {\n        points.splice(minIndex, 1);\n      } else {\n        break;\n      }\n    }\n    return points;\n  }\n}","import { RoughHachureIterator } from './hachure.js';\nimport { RoughSegmentRelation, RoughSegment } from './segment.js';\nimport { RoughPath, RoughArcConverter, PathFitter } from './path.js';\n\nexport class RoughRenderer {\n  line(x1, y1, x2, y2, o) {\n    let ops = this._doubleLine(x1, y1, x2, y2, o);\n    return { type: 'path', ops };\n  }\n\n  linearPath(points, close, o) {\n    const len = (points || []).length;\n    if (len > 2) {\n      let ops = [];\n      for (let i = 0; i < (len - 1); i++) {\n        ops = ops.concat(this._doubleLine(points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], o));\n      }\n      if (close) {\n        ops = ops.concat(this._doubleLine(points[len - 1][0], points[len - 1][1], points[0][0], points[0][1], o));\n      }\n      return { type: 'path', ops };\n    } else if (len === 2) {\n      return this.line(points[0][0], points[0][1], points[1][0], points[1][1], o);\n    }\n  }\n\n  polygon(points, o) {\n    return this.linearPath(points, true, o);\n  }\n\n  rectangle(x, y, width, height, o) {\n    let points = [\n      [x, y], [x + width, y], [x + width, y + height], [x, y + height]\n    ];\n    return this.polygon(points, o);\n  }\n\n  curve(points, o) {\n    let o1 = this._curveWithOffset(points, 1 * (1 + o.roughness * 0.2), o);\n    let o2 = this._curveWithOffset(points, 1.5 * (1 + o.roughness * 0.22), o);\n    return { type: 'path', ops: o1.concat(o2) };\n  }\n\n  ellipse(x, y, width, height, o) {\n    const increment = (Math.PI * 2) / o.curveStepCount;\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += this._getOffset(-rx * 0.05, rx * 0.05, o);\n    ry += this._getOffset(-ry * 0.05, ry * 0.05, o);\n    let o1 = this._ellipse(increment, x, y, rx, ry, 1, increment * this._getOffset(0.1, this._getOffset(0.4, 1, o), o), o);\n    let o2 = this._ellipse(increment, x, y, rx, ry, 1.5, 0, o);\n    return { type: 'path', ops: o1.concat(o2) };\n  }\n\n  arc(x, y, width, height, start, stop, closed, roughClosure, o) {\n    let cx = x;\n    let cy = y;\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += this._getOffset(-rx * 0.01, rx * 0.01, o);\n    ry += this._getOffset(-ry * 0.01, ry * 0.01, o);\n    let strt = start;\n    let stp = stop;\n    while (strt < 0) {\n      strt += Math.PI * 2;\n      stp += Math.PI * 2;\n    }\n    if ((stp - strt) > (Math.PI * 2)) {\n      strt = 0;\n      stp = Math.PI * 2;\n    }\n    let ellipseInc = (Math.PI * 2) / o.curveStepCount;\n    let arcInc = Math.min(ellipseInc / 2, (stp - strt) / 2);\n    let o1 = this._arc(arcInc, cx, cy, rx, ry, strt, stp, 1, o);\n    let o2 = this._arc(arcInc, cx, cy, rx, ry, strt, stp, 1.5, o);\n    let ops = o1.concat(o2);\n    if (closed) {\n      if (roughClosure) {\n        ops = ops.concat(this._doubleLine(cx, cy, cx + rx * Math.cos(strt), cy + ry * Math.sin(strt), o));\n        ops = ops.concat(this._doubleLine(cx, cy, cx + rx * Math.cos(stp), cy + ry * Math.sin(stp), o));\n      } else {\n        ops.push({ op: 'lineTo', data: [cx, cy] });\n        ops.push({ op: 'lineTo', data: [cx + rx * Math.cos(strt), cy + ry * Math.sin(strt)] });\n      }\n    }\n    return { type: 'path', ops };\n  }\n\n  hachureFillArc(x, y, width, height, start, stop, o) {\n    let cx = x;\n    let cy = y;\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += this._getOffset(-rx * 0.01, rx * 0.01, o);\n    ry += this._getOffset(-ry * 0.01, ry * 0.01, o);\n    let strt = start;\n    let stp = stop;\n    while (strt < 0) {\n      strt += Math.PI * 2;\n      stp += Math.PI * 2;\n    }\n    if ((stp - strt) > (Math.PI * 2)) {\n      strt = 0;\n      stp = Math.PI * 2;\n    }\n    let increment = (stp - strt) / o.curveStepCount;\n    let offset = 1;\n    let xc = [], yc = [];\n    for (let angle = strt; angle <= stp; angle = angle + increment) {\n      xc.push(cx + rx * Math.cos(angle));\n      yc.push(cy + ry * Math.sin(angle));\n    }\n    xc.push(cx + rx * Math.cos(stp));\n    yc.push(cy + ry * Math.sin(stp));\n    xc.push(cx);\n    yc.push(cy);\n    return this.hachureFillShape(xc, yc, o);\n  }\n\n  solidFillShape(xCoords, yCoords, o) {\n    let ops = [];\n    if (xCoords && yCoords && xCoords.length && yCoords.length && xCoords.length === yCoords.length) {\n      let offset = o.maxRandomnessOffset || 0;\n      const len = xCoords.length;\n      if (len > 2) {\n        ops.push({ op: 'move', data: [xCoords[0] + this._getOffset(-offset, offset, o), yCoords[0] + this._getOffset(-offset, offset, o)] });\n        for (var i = 1; i < len; i++) {\n          ops.push({ op: 'lineTo', data: [xCoords[i] + this._getOffset(-offset, offset, o), yCoords[i] + this._getOffset(-offset, offset, o)] });\n        }\n      }\n    }\n    return { type: 'fillPath', ops };\n  }\n\n  hachureFillShape(xCoords, yCoords, o) {\n    let ops = [];\n    if (xCoords && yCoords && xCoords.length && yCoords.length) {\n      let left = xCoords[0];\n      let right = xCoords[0];\n      let top = yCoords[0];\n      let bottom = yCoords[0];\n      for (let i = 1; i < xCoords.length; i++) {\n        left = Math.min(left, xCoords[i]);\n        right = Math.max(right, xCoords[i]);\n        top = Math.min(top, yCoords[i]);\n        bottom = Math.max(bottom, yCoords[i]);\n      }\n      const angle = o.hachureAngle;\n      let gap = o.hachureGap;\n      if (gap < 0) {\n        gap = o.strokeWidth * 4;\n      }\n      gap = Math.max(gap, 0.1);\n\n      const radPerDeg = Math.PI / 180;\n      const hachureAngle = (angle % 180) * radPerDeg;\n      const cosAngle = Math.cos(hachureAngle);\n      const sinAngle = Math.sin(hachureAngle);\n      const tanAngle = Math.tan(hachureAngle);\n\n      const it = new RoughHachureIterator(top - 1, bottom + 1, left - 1, right + 1, gap, sinAngle, cosAngle, tanAngle);\n      let rectCoords;\n      while ((rectCoords = it.getNextLine()) != null) {\n        let lines = this._getIntersectingLines(rectCoords, xCoords, yCoords);\n        for (let i = 0; i < lines.length; i++) {\n          if (i < (lines.length - 1)) {\n            let p1 = lines[i];\n            let p2 = lines[i + 1];\n            ops = ops.concat(this._doubleLine(p1[0], p1[1], p2[0], p2[1], o));\n          }\n        }\n      }\n    }\n    return { type: 'path', ops };\n  }\n\n  hachureFillEllipse(cx, cy, width, height, o) {\n    let ops = [];\n    let rx = Math.abs(width / 2);\n    let ry = Math.abs(height / 2);\n    rx += this._getOffset(-rx * 0.05, rx * 0.05, o);\n    ry += this._getOffset(-ry * 0.05, ry * 0.05, o);\n    let angle = o.hachureAngle;\n    let gap = o.hachureGap;\n    if (gap <= 0) {\n      gap = o.strokeWidth * 4;\n    }\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n      fweight = o.strokeWidth / 2;\n    }\n    const radPerDeg = Math.PI / 180;\n    let hachureAngle = (angle % 180) * radPerDeg;\n    let tanAngle = Math.tan(hachureAngle);\n    let aspectRatio = ry / rx;\n    let hyp = Math.sqrt(aspectRatio * tanAngle * aspectRatio * tanAngle + 1);\n    let sinAnglePrime = aspectRatio * tanAngle / hyp;\n    let cosAnglePrime = 1 / hyp;\n    let gapPrime = gap / ((rx * ry / Math.sqrt((ry * cosAnglePrime) * (ry * cosAnglePrime) + (rx * sinAnglePrime) * (rx * sinAnglePrime))) / rx);\n    let halfLen = Math.sqrt((rx * rx) - (cx - rx + gapPrime) * (cx - rx + gapPrime));\n    for (var xPos = cx - rx + gapPrime; xPos < cx + rx; xPos += gapPrime) {\n      halfLen = Math.sqrt((rx * rx) - (cx - xPos) * (cx - xPos));\n      let p1 = this._affine(xPos, cy - halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n      let p2 = this._affine(xPos, cy + halfLen, cx, cy, sinAnglePrime, cosAnglePrime, aspectRatio);\n      ops = ops.concat(this._doubleLine(p1[0], p1[1], p2[0], p2[1], o));\n    }\n    return { type: 'path', ops };\n  }\n\n  svgPath(path, o) {\n    path = (path || '').replace(/\\n/g, \" \").replace(/(-)/g, \" -\").replace(/(-\\s)/g, \"-\").replace(\"/(\\s\\s)/g\", \" \");\n    let p = new RoughPath(path);\n    if (o.simplification) {\n      let fitter = new PathFitter(p.linearPoints, p.closed);\n      let d = fitter.fit(o.simplification);\n      p = new RoughPath(d);\n    }\n    let ops = [];\n    let segments = p.segments || [];\n    for (let i = 0; i < segments.length; i++) {\n      let s = segments[i];\n      let prev = i > 0 ? segments[i - 1] : null;\n      let opList = this._processSegment(p, s, prev, o);\n      if (opList && opList.length) {\n        ops = ops.concat(opList);\n      }\n    }\n    return { type: 'path', ops };\n  }\n\n  // privates\n\n  _bezierTo(x1, y1, x2, y2, x, y, path, o) {\n    let ops = [];\n    let ros = [o.maxRandomnessOffset || 1, (o.maxRandomnessOffset || 1) + 0.5];\n    let f = null;\n    for (let i = 0; i < 2; i++) {\n      if (i === 0) {\n        ops.push({ op: 'move', data: [path.x, path.y] });\n      } else {\n        ops.push({ op: 'move', data: [path.x + this._getOffset(-ros[0], ros[0], o), path.y + this._getOffset(-ros[0], ros[0], o)] });\n      }\n      f = [x + this._getOffset(-ros[i], ros[i], o), y + this._getOffset(-ros[i], ros[i], o)];\n      ops.push({\n        op: 'bcurveTo', data: [\n          x1 + this._getOffset(-ros[i], ros[i], o), y1 + this._getOffset(-ros[i], ros[i], o),\n          x2 + this._getOffset(-ros[i], ros[i], o), y2 + this._getOffset(-ros[i], ros[i], o),\n          f[0], f[1]\n        ]\n      });\n    }\n    path.setPosition(f[0], f[1]);\n    return ops;\n  }\n\n  _processSegment(path, seg, prevSeg, o) {\n    let ops = [];\n    switch (seg.key) {\n      case 'M':\n      case 'm': {\n        let delta = seg.key === 'm';\n        if (seg.data.length >= 2) {\n          let x = +seg.data[0];\n          let y = +seg.data[1];\n          if (delta) {\n            x += path.x;\n            y += path.y;\n          }\n          let ro = 1 * (o.maxRandomnessOffset || 0);\n          x = x + this._getOffset(-ro, ro, o);\n          y = y + this._getOffset(-ro, ro, o);\n          path.setPosition(x, y);\n          ops.push({ op: 'move', data: [x, y] });\n        }\n        break;\n      }\n      case 'L':\n      case 'l': {\n        let delta = seg.key === 'l';\n        if (seg.data.length >= 2) {\n          let x = +seg.data[0];\n          let y = +seg.data[1];\n          if (delta) {\n            x += path.x;\n            y += path.y;\n          }\n          ops = ops.concat(this._doubleLine(path.x, path.y, x, y, o));\n          path.setPosition(x, y);\n        }\n        break;\n      }\n      case 'H':\n      case 'h': {\n        const delta = seg.key === 'h';\n        if (seg.data.length) {\n          let x = +seg.data[0];\n          if (delta) {\n            x += path.x;\n          }\n          ops = ops.concat(this._doubleLine(path.x, path.y, x, path.y, o));\n          path.setPosition(x, path.y);\n        }\n        break;\n      }\n      case 'V':\n      case 'v': {\n        const delta = seg.key === 'v';\n        if (seg.data.length) {\n          let y = +seg.data[0];\n          if (delta) {\n            y += path.y;\n          }\n          ops = ops.concat(this._doubleLine(path.x, path.y, path.x, y, o));\n          path.setPosition(path.x, y);\n        }\n        break;\n      }\n      case 'Z':\n      case 'z': {\n        if (path.first) {\n          ops = ops.concat(this._doubleLine(path.x, path.y, path.first[0], path.first[1], o));\n          path.setPosition(path.first[0], path.first[1]);\n          path.first = null;\n        }\n        break;\n      }\n      case 'C':\n      case 'c': {\n        const delta = seg.key === 'c';\n        if (seg.data.length >= 6) {\n          let x1 = +seg.data[0];\n          let y1 = +seg.data[1];\n          let x2 = +seg.data[2];\n          let y2 = +seg.data[3];\n          let x = +seg.data[4];\n          let y = +seg.data[5];\n          if (delta) {\n            x1 += path.x;\n            x2 += path.x;\n            x += path.x;\n            y1 += path.y;\n            y2 += path.y;\n            y += path.y;\n          }\n          let ob = this._bezierTo(x1, y1, x2, y2, x, y, path, o);\n          ops = ops.concat(ob);\n          path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n        }\n        break;\n      }\n      case 'S':\n      case 's': {\n        const delta = seg.key === 's';\n        if (seg.data.length >= 4) {\n          let x2 = +seg.data[0];\n          let y2 = +seg.data[1];\n          let x = +seg.data[2];\n          let y = +seg.data[3];\n          if (delta) {\n            x2 += path.x;\n            x += path.x;\n            y2 += path.y;\n            y += path.y;\n          }\n          let x1 = x2;\n          let y1 = y2;\n          let prevKey = prevSeg ? prevSeg.key : \"\";\n          var ref = null;\n          if (prevKey == 'c' || prevKey == 'C' || prevKey == 's' || prevKey == 'S') {\n            ref = path.bezierReflectionPoint;\n          }\n          if (ref) {\n            x1 = ref[0];\n            y1 = ref[1];\n          }\n          let ob = this._bezierTo(x1, y1, x2, y2, x, y, path, o);\n          ops = ops.concat(ob);\n          path.bezierReflectionPoint = [x + (x - x2), y + (y - y2)];\n        }\n        break;\n      }\n      case 'Q':\n      case 'q': {\n        const delta = seg.key === 'q';\n        if (seg.data.length >= 4) {\n          let x1 = +seg.data[0];\n          let y1 = +seg.data[1];\n          let x = +seg.data[2];\n          let y = +seg.data[3];\n          if (delta) {\n            x1 += path.x;\n            x += path.x;\n            y1 += path.y;\n            y += path.y;\n          }\n          let offset1 = 1 * (1 + o.roughness * 0.2);\n          let offset2 = 1.5 * (1 + o.roughness * 0.22);\n          ops.push({ op: 'move', data: [path.x + this._getOffset(-offset1, offset1, o), path.y + this._getOffset(-offset1, offset1, o)] });\n          let f = [x + this._getOffset(-offset1, offset1, o), y + this._getOffset(-offset1, offset1, o)];\n          ops.push({\n            op: 'qcurveTo', data: [\n              x1 + this._getOffset(-offset1, offset1, o), y1 + this._getOffset(-offset1, offset1, o),\n              f[0], f[1]\n            ]\n          });\n          ops.push({ op: 'move', data: [path.x + this._getOffset(-offset2, offset2, o), path.y + this._getOffset(-offset2, offset2, o)] });\n          f = [x + this._getOffset(-offset2, offset2, o), y + this._getOffset(-offset2, offset2, o)];\n          ops.push({\n            op: 'qcurveTo', data: [\n              x1 + this._getOffset(-offset2, offset2, o), y1 + this._getOffset(-offset2, offset2, o),\n              f[0], f[1]\n            ]\n          });\n          path.setPosition(f[0], f[1]);\n          path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n        }\n        break;\n      }\n      case 'T':\n      case 't': {\n        const delta = seg.key === 't';\n        if (seg.data.length >= 2) {\n          let x = +seg.data[0];\n          let y = +seg.data[1];\n          if (delta) {\n            x += path.x;\n            y += path.y;\n          }\n          let x1 = x;\n          let y1 = y;\n          let prevKey = prevSeg ? prevSeg.key : \"\";\n          var ref = null;\n          if (prevKey == 'q' || prevKey == 'Q' || prevKey == 't' || prevKey == 'T') {\n            ref = path.quadReflectionPoint;\n          }\n          if (ref) {\n            x1 = ref[0];\n            y1 = ref[1];\n          }\n          let offset1 = 1 * (1 + o.roughness * 0.2);\n          let offset2 = 1.5 * (1 + o.roughness * 0.22);\n          ops.push({ op: 'move', data: [path.x + this._getOffset(-offset1, offset1, o), path.y + this._getOffset(-offset1, offset1, o)] });\n          let f = [x + this._getOffset(-offset1, offset1, o), y + this._getOffset(-offset1, offset1, o)];\n          ops.push({\n            op: 'qcurveTo', data: [\n              x1 + this._getOffset(-offset1, offset1, o), y1 + this._getOffset(-offset1, offset1, o),\n              f[0], f[1]\n            ]\n          });\n          ops.push({ op: 'move', data: [path.x + this._getOffset(-offset2, offset2, o), path.y + this._getOffset(-offset2, offset2, o)] });\n          f = [x + this._getOffset(-offset2, offset2, o), y + this._getOffset(-offset2, offset2, o)];\n          ops.push({\n            op: 'qcurveTo', data: [\n              x1 + this._getOffset(-offset2, offset2, o), y1 + this._getOffset(-offset2, offset2, o),\n              f[0], f[1]\n            ]\n          });\n          path.setPosition(f[0], f[1]);\n          path.quadReflectionPoint = [x + (x - x1), y + (y - y1)];\n        }\n        break;\n      }\n      case 'A':\n      case 'a': {\n        const delta = seg.key === 'a';\n        if (seg.data.length >= 7) {\n          let rx = +seg.data[0];\n          let ry = +seg.data[1];\n          let angle = +seg.data[2];\n          let largeArcFlag = +seg.data[3];\n          let sweepFlag = +seg.data[4];\n          let x = +seg.data[5];\n          let y = +seg.data[6];\n          if (delta) {\n            x += path.x;\n            y += path.y;\n          }\n          if (x == path.x && y == path.y) {\n            break;\n          }\n          if (rx == 0 || ry == 0) {\n            ops = ops.concat(this._doubleLine(path.x, path.y, x, y, o));\n            path.setPosition(x, y);\n          } else {\n            let final = null;\n            let ro = o.maxRandomnessOffset || 0;\n            for (let i = 0; i < 1; i++) {\n              let arcConverter = new RoughArcConverter(\n                [path.x, path.y],\n                [x, y],\n                [rx, ry],\n                angle,\n                largeArcFlag ? true : false,\n                sweepFlag ? true : false\n              );\n              let segment = arcConverter.getNextSegment();\n              while (segment) {\n                let ob = this._bezierTo(segment.cp1[0], segment.cp1[1], segment.cp2[0], segment.cp2[1], segment.to[0], segment.to[1], path, o);\n                ops = ops.concat(ob);\n                segment = arcConverter.getNextSegment();\n              }\n            }\n          }\n        }\n        break;\n      }\n      default:\n        break;\n    }\n    return ops;\n  }\n\n  _getOffset(min, max, ops) {\n    return ops.roughness * ((Math.random() * (max - min)) + min);\n  }\n\n  _affine(x, y, cx, cy, sinAnglePrime, cosAnglePrime, R) {\n    var A = -cx * cosAnglePrime - cy * sinAnglePrime + cx;\n    var B = R * (cx * sinAnglePrime - cy * cosAnglePrime) + cy;\n    var C = cosAnglePrime;\n    var D = sinAnglePrime;\n    var E = -R * sinAnglePrime;\n    var F = R * cosAnglePrime;\n    return [\n      A + C * x + D * y,\n      B + E * x + F * y\n    ];\n  }\n\n  _doubleLine(x1, y1, x2, y2, o) {\n    const o1 = this._line(x1, y1, x2, y2, o, true, false);\n    const o2 = this._line(x1, y1, x2, y2, o, true, true);\n    return o1.concat(o2);\n  }\n\n  _line(x1, y1, x2, y2, o, move, overlay) {\n    const lengthSq = Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2);\n    let offset = o.maxRandomnessOffset || 0;\n    if ((offset * offset * 100) > lengthSq) {\n      offset = Math.sqrt(lengthSq) / 10;\n    }\n    const halfOffset = offset / 2;\n    const divergePoint = 0.2 + Math.random() * 0.2;\n    let midDispX = o.bowing * o.maxRandomnessOffset * (y2 - y1) / 200;\n    let midDispY = o.bowing * o.maxRandomnessOffset * (x1, x2) / 200;\n    midDispX = this._getOffset(-midDispX, midDispX, o);\n    midDispY = this._getOffset(-midDispY, midDispY, o);\n    let ops = [];\n    if (move) {\n      if (overlay) {\n        ops.push({\n          op: 'move', data: [\n            x1 + this._getOffset(-halfOffset, halfOffset, o),\n            y1 + this._getOffset(-halfOffset, halfOffset, o)\n          ]\n        });\n      } else {\n        ops.push({\n          op: 'move', data: [\n            x1 + this._getOffset(-offset, offset, o),\n            y1 + this._getOffset(-offset, offset, o)\n          ]\n        });\n      }\n    }\n    if (overlay) {\n      ops.push({\n        op: 'bcurveTo', data: [\n          midDispX + x1 + (x2 - x1) * divergePoint + this._getOffset(-halfOffset, halfOffset, o),\n          midDispY + y1 + (y2 - y1) * divergePoint + this._getOffset(-halfOffset, halfOffset, o),\n          midDispX + x1 + 2 * (x2 - x1) * divergePoint + this._getOffset(-halfOffset, halfOffset, o),\n          midDispY + y1 + 2 * (y2 - y1) * divergePoint + this._getOffset(-halfOffset, halfOffset, o),\n          x2 + this._getOffset(-halfOffset, halfOffset, o),\n          y2 + this._getOffset(-halfOffset, halfOffset, o)\n        ]\n      });\n    } else {\n      ops.push({\n        op: 'bcurveTo', data: [\n          midDispX + x1 + (x2 - x1) * divergePoint + this._getOffset(-offset, offset, o),\n          midDispY + y1 + (y2 - y1) * divergePoint + this._getOffset(-offset, offset, o),\n          midDispX + x1 + 2 * (x2 - x1) * divergePoint + this._getOffset(-offset, offset, o),\n          midDispY + y1 + 2 * (y2 - y1) * divergePoint + this._getOffset(-offset, offset, o),\n          x2 + this._getOffset(-offset, offset, o),\n          y2 + this._getOffset(-offset, offset, o)\n        ]\n      });\n    }\n    return ops;\n  }\n\n  _curve(points, closePoint, o) {\n    const len = points.length;\n    let ops = [];\n    if (len > 3) {\n      const b = [];\n      const s = 1 - o.curveTightness;\n      ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n      for (let i = 1; (i + 2) < len; i++) {\n        const cachedVertArray = points[i];\n        b[0] = [cachedVertArray[0], cachedVertArray[1]];\n        b[1] = [cachedVertArray[0] + (s * points[i + 1][0] - s * points[i - 1][0]) / 6, cachedVertArray[1] + (s * points[i + 1][1] - s * points[i - 1][1]) / 6];\n        b[2] = [points[i + 1][0] + (s * points[i][0] - s * points[i + 2][0]) / 6, points[i + 1][1] + (s * points[i][1] - s * points[i + 2][1]) / 6];\n        b[3] = [points[i + 1][0], points[i + 1][1]];\n        ops.push({ op: 'bcurveTo', data: [b[1][0], b[1][1], b[2][0], b[2][1], b[3][0], b[3][1]] });\n      }\n      if (closePoint && closePoint.length === 2) {\n        let ro = o.maxRandomnessOffset;\n        // TODO: more roughness here?\n        ops.push({ ops: 'lineTo', data: [closePoint[0] + this._getOffset(-ro, ro, o), closePoint[1] + + this._getOffset(-ro, ro, o)] });\n      }\n    } else if (len === 3) {\n      ops.push({ op: 'move', data: [points[1][0], points[1][1]] });\n      ops.push({\n        op: 'bcurveTo', data: [\n          points[1][0], points[1][1],\n          points[2][0], points[2][1],\n          points[2][0], points[2][1]]\n      });\n    } else if (len === 2) {\n      ops = ops.concat(this._doubleLine(points[0][0], points[0][1], points[1][0], points[1][1], o));\n    }\n    return ops;\n  }\n\n  _ellipse(increment, cx, cy, rx, ry, offset, overlap, o) {\n    const radOffset = this._getOffset(-0.5, 0.5, o) - (Math.PI / 2);\n    const points = [];\n    points.push([\n      this._getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n      this._getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n    ]);\n    for (let angle = radOffset; angle < (Math.PI * 2 + radOffset - 0.01); angle = angle + increment) {\n      points.push([\n        this._getOffset(-offset, offset, o) + cx + rx * Math.cos(angle),\n        this._getOffset(-offset, offset, o) + cy + ry * Math.sin(angle)\n      ]);\n    }\n    points.push([\n      this._getOffset(-offset, offset, o) + cx + rx * Math.cos(radOffset + Math.PI * 2 + overlap * 0.5),\n      this._getOffset(-offset, offset, o) + cy + ry * Math.sin(radOffset + Math.PI * 2 + overlap * 0.5)\n    ]);\n    points.push([\n      this._getOffset(-offset, offset, o) + cx + 0.98 * rx * Math.cos(radOffset + overlap),\n      this._getOffset(-offset, offset, o) + cy + 0.98 * ry * Math.sin(radOffset + overlap)\n    ]);\n    points.push([\n      this._getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset + overlap * 0.5),\n      this._getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset + overlap * 0.5)\n    ]);\n    return this._curve(points, null, o);\n  }\n\n  _curveWithOffset(points, offset, o) {\n    const ps = [];\n    ps.push([\n      points[0][0] + this._getOffset(-offset, offset, o),\n      points[0][1] + this._getOffset(-offset, offset, o),\n    ]);\n    ps.push([\n      points[0][0] + this._getOffset(-offset, offset, o),\n      points[0][1] + this._getOffset(-offset, offset, o),\n    ]);\n    for (let i = 1; i < points.length; i++) {\n      ps.push([\n        points[i][0] + this._getOffset(-offset, offset, o),\n        points[i][1] + this._getOffset(-offset, offset, o),\n      ]);\n      if (i === (points.length - 1)) {\n        ps.push([\n          points[i][0] + this._getOffset(-offset, offset, o),\n          points[i][1] + this._getOffset(-offset, offset, o),\n        ]);\n      }\n    }\n    return this._curve(ps, null, o);\n  }\n\n  _arc(increment, cx, cy, rx, ry, strt, stp, offset, o) {\n    const radOffset = strt + this._getOffset(-0.1, 0.1, o);\n    const points = [];\n    points.push([\n      this._getOffset(-offset, offset, o) + cx + 0.9 * rx * Math.cos(radOffset - increment),\n      this._getOffset(-offset, offset, o) + cy + 0.9 * ry * Math.sin(radOffset - increment)\n    ]);\n    for (let angle = radOffset; angle <= stp; angle = angle + increment) {\n      points.push([\n        this._getOffset(-offset, offset, o) + cx + rx * Math.cos(angle),\n        this._getOffset(-offset, offset, o) + cy + ry * Math.sin(angle)\n      ]);\n    }\n    points.push([\n      cx + rx * Math.cos(stp),\n      cy + ry * Math.sin(stp)\n    ]);\n    points.push([\n      cx + rx * Math.cos(stp),\n      cy + ry * Math.sin(stp)\n    ]);\n    return this._curve(points, null, o);\n  }\n\n  _getIntersectingLines(lineCoords, xCoords, yCoords) {\n    let intersections = [];\n    var s1 = new RoughSegment(lineCoords[0], lineCoords[1], lineCoords[2], lineCoords[3]);\n    for (var i = 0; i < xCoords.length; i++) {\n      let s2 = new RoughSegment(xCoords[i], yCoords[i], xCoords[(i + 1) % xCoords.length], yCoords[(i + 1) % xCoords.length]);\n      if (s1.compare(s2) == RoughSegmentRelation().INTERSECTS) {\n        intersections.push([s1.xi, s1.yi]);\n      }\n    }\n    return intersections;\n  }\n}","import { RoughSegmentRelation, RoughSegment } from './segment.js';\nimport { RoughHachureIterator } from './hachure.js';\nimport { RoughRenderer } from './renderer.js';\n\nself._roughScript = self.document && self.document.currentScript && self.document.currentScript.src;\n\nexport class RoughCanvas {\n  constructor(canvas, config) {\n    this.config = config || {};\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.defaultOptions = {\n      maxRandomnessOffset: 2,\n      roughness: 1,\n      bowing: 1,\n      stroke: '#000',\n      strokeWidth: 1,\n      curveTightness: 0,\n      curveStepCount: 9,\n      fill: null,\n      fillStyle: 'hachure',\n      fillWeight: -1,\n      hachureAngle: -41,\n      hachureGap: -1\n    };\n    if (this.config.options) {\n      this.defaultOptions = this._options(this.config.options);\n    }\n  }\n\n  static createRenderer() {\n    return new RoughRenderer();\n  }\n\n  async lib() {\n    if (!this._renderer) {\n      if (window.workly && (!this.config.noWorker)) {\n        const tos = Function.prototype.toString;\n        const worklySource = this.config.worklyURL || 'https://cdn.jsdelivr.net/gh/pshihn/workly/dist/workly.min.js';\n        const rendererSource = this.config.roughURL || self._roughScript;\n        if (rendererSource && worklySource) {\n          let code = `importScripts('${worklySource}', '${rendererSource}');\\nworkly.expose(self.rough.createRenderer());`;\n          let ourl = URL.createObjectURL(new Blob([code]));\n          this._renderer = workly.proxy(ourl);\n        } else {\n          this._renderer = new RoughRenderer();\n        }\n      } else {\n        this._renderer = new RoughRenderer();\n      }\n    }\n    return this._renderer;\n  }\n\n  async line(x1, y1, x2, y2, options) {\n    let o = this._options(options);\n    let lib = await this.lib();\n    let drawing = await lib.line(x1, y1, x2, y2, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  async rectangle(x, y, width, height, options) {\n    let o = this._options(options);\n    let lib = await this.lib();\n    if (o.fill) {\n      let ctx = this.ctx;\n      const xc = [x, x + width, x + width, x];\n      const yc = [y, y, y + height, y + height];\n      if (o.fillStyle === 'solid') {\n        let fillShape = await lib.solidFillShape(xc, yc, o);\n        this._fill(ctx, fillShape, o);\n      } else {\n        let fillShape = await lib.hachureFillShape(xc, yc, o);\n        this._fillSketch(ctx, fillShape, o);\n      }\n    }\n    let drawing = await lib.rectangle(x, y, width, height, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  async ellipse(x, y, width, height, options) {\n    let o = this._options(options);\n    let lib = await this.lib();\n    if (o.fill) {\n      if (o.fillStyle === 'solid') {\n        let fillShape = await lib.ellipse(x, y, width, height, o);\n        this._fill(this.ctx, fillShape, o);\n      } else {\n        let fillShape = await lib.hachureFillEllipse(x, y, width, height, o);\n        this._fillSketch(this.ctx, fillShape, o);\n      }\n    }\n    let drawing = await lib.ellipse(x, y, width, height, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  async circle(x, y, radius, options) {\n    return await this.ellipse(x, y, radius, radius, options);\n  }\n\n  async linearPath(points, options) {\n    let o = this._options(options);\n    let lib = await this.lib();\n    let drawing = await lib.linearPath(points, false, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  async polygon(points, options) {\n    let o = this._options(options);\n    let lib = await this.lib();\n    if (o.fill) {\n      let xc = [], yc = [];\n      for (let p of points) {\n        xc.push(p[0]);\n        yc.push(p[1]);\n      }\n      if (o.fillStyle === 'solid') {\n        let fillShape = await lib.solidFillShape(xc, yc, o);\n        this._fill(this.ctx, fillShape, o);\n      } else {\n        let fillShape = await lib.hachureFillShape(xc, yc, o);\n        this._fillSketch(this.ctx, fillShape, o);\n      }\n    }\n    let drawing = await lib.linearPath(points, true, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  async arc(x, y, width, height, start, stop, closed, options) {\n    let o = this._options(options);\n    let lib = await this.lib();\n    if (closed && o.fill) {\n      if (o.fillStyle === 'solid') {\n        let fillShape = await lib.arc(x, y, width, height, start, stop, true, false, o);\n        this._fill(this.ctx, fillShape, o);\n      } else {\n        let fillShape = await lib.hachureFillArc(x, y, width, height, start, stop, o);\n        this._fillSketch(this.ctx, fillShape, o);\n      }\n    }\n    let drawing = await lib.arc(x, y, width, height, start, stop, closed, true, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  async curve(points, options) {\n    let o = this._options(options);\n    let lib = await this.lib();\n    let drawing = await lib.curve(points, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  async path(d, options) {\n    if (!d) {\n      return;\n    }\n    let o = this._options(options);\n    let lib = await this.lib();\n    if (o.fill) {\n      if (o.fillStyle === 'solid') {\n        this.ctx.save();\n        this.ctx.fillStyle = o.fill;\n        let p2d = new Path2D(d);\n        this.ctx.fill(p2d);\n        this.ctx.restore();\n      } else {\n        let size = [0, 0];\n        try {\n          const ns = \"http://www.w3.org/2000/svg\";\n          let svg = document.createElementNS(ns, \"svg\");\n          svg.setAttribute(\"width\", \"0\");\n          svg.setAttribute(\"height\", \"0\");\n          let pathNode = document.createElementNS(ns, \"path\");\n          pathNode.setAttribute('d', d);\n          svg.appendChild(pathNode);\n          document.body.appendChild(svg);\n          let bb = pathNode.getBBox()\n          if (bb) {\n            size[0] = bb.width || 0;\n            size[1] = bb.height || 0;\n          }\n          document.body.removeChild(svg);\n        } catch (err) { }\n        if (!(size[0] * size[1])) {\n          size = [this.canvas.width || 100, this.canvas.height || 100];\n        }\n        size[0] = Math.min(size[0] * 4, this.canvas.width);\n        size[1] = Math.min(size[1] * 4, this.canvas.height);\n        let xc = [0, size[0], size[0], 0];\n        let yc = [0, 0, size[1], size[1]];\n        let fillShape = await lib.hachureFillShape(xc, yc, o);\n        let hcanvas = document.createElement('canvas');\n        hcanvas.width = size[0];\n        hcanvas.height = size[1];\n        this._fillSketch(hcanvas.getContext(\"2d\"), fillShape, o);\n        this.ctx.save();\n        this.ctx.fillStyle = this.ctx.createPattern(hcanvas, 'repeat');\n        let p2d = new Path2D(d);\n        this.ctx.fill(p2d);\n        this.ctx.restore();\n      }\n    }\n    let drawing = await lib.svgPath(d, o);\n    this._draw(this.ctx, drawing, o);\n  }\n\n  // private\n\n  _options(options) {\n    return options ? Object.assign({}, this.defaultOptions, options) : this.defaultOptions;\n  }\n\n  _draw(ctx, drawing, o) {\n    ctx.save();\n    ctx.strokeStyle = o.stroke;\n    ctx.lineWidth = o.strokeWidth;\n    this._drawToContext(ctx, drawing);\n    ctx.restore();\n  }\n\n  _fillSketch(ctx, drawing, o) {\n    let fweight = o.fillWeight;\n    if (fweight < 0) {\n      fweight = o.strokeWidth / 2;\n    }\n    ctx.save();\n    ctx.strokeStyle = o.fill;\n    ctx.lineWidth = fweight;\n    this._drawToContext(ctx, drawing);\n    ctx.restore();\n  }\n\n  _fill(ctx, drawing, o) {\n    ctx.save();\n    ctx.fillStyle = o.fill;\n    drawing.type = 'fillPath';\n    this._drawToContext(ctx, drawing, o);\n    ctx.restore();\n  }\n\n  _drawToContext(ctx, drawing) {\n    if (drawing.type === 'path' || drawing.type === 'fillPath') {\n      ctx.beginPath();\n      for (let item of drawing.ops) {\n        const data = item.data;\n        switch (item.op) {\n          case 'move':\n            ctx.moveTo(data[0], data[1]);\n            break;\n          case 'bcurveTo':\n            ctx.bezierCurveTo(data[0], data[1], data[2], data[3], data[4], data[5]);\n            break;\n          case 'qcurveTo':\n            ctx.quadraticCurveTo(data[0], data[1], data[2], data[3]);\n            break;\n          case 'lineTo':\n            ctx.lineTo(data[0], data[1]);\n            break;\n        }\n      }\n      if (drawing.type === 'fillPath') {\n        ctx.fill();\n      } else {\n        ctx.stroke();\n      }\n    }\n  }\n}","import { RoughCanvas } from './canvas.js';\n\nexport default {\n  canvas(canvas, config) {\n    return new RoughCanvas(canvas, config);\n  },\n  createRenderer() {\n    return RoughCanvas.createRenderer();\n  }\n};","\r\n\r\nimport rough from '../node_modules/roughjs/src/index'\r\n\r\n\r\nvar RoughCanvas = L.Canvas.extend({\r\n\t_initContainer: function () {\r\n\r\n\t\tL.Canvas.prototype._initContainer.call(this)\r\n\t\tthis._rc = rough.canvas(this._container)\r\n\t},\r\n\r\n\t_updatePoly: function (layer, closed) {\r\n\r\n\r\n\t\tif (!this._drawing) { return; }\r\n\r\n\t\tvar i, j, len2, p,\r\n\t\t\tparts = layer._parts,\r\n\t\t\tlen = parts.length,\r\n\t\t\tctx = this._ctx;\r\n\r\n\t\tif (!len) { return; }\r\n\r\n\t\tthis._drawnLayers[layer._leaflet_id] = layer;\r\n\r\n\r\n\t\t//------------------------ rough sketch begin\r\n\r\n\t\tvar svgPathStr = L.SVG.pointsToPath(parts, closed);\r\n\t\tconsole.log(closed)\r\n\r\n\t\tvar options = layer.options;\r\n\t\tvar pathOption = {}\r\n\r\n\r\n\t\tpathOption.roughness = options.roughness || 1;\r\n\t\tpathOption.bowing = options.bowing || 1;\r\n\t\tpathOption.stroke = options.strokeColor || '#000000';\r\n\t\tpathOption.strokeWidth = options.strokeWidth || 1;\r\n\t\tif (closed) {\r\n\t\t\tpathOption.fill = options.fillColor || options.color;\r\n\t\t\tpathOption.fillStyle = options.fillStyle || '';\r\n\t\t\tpathOption.fillWeight = options.fillWeight || '';\r\n\t\t\tpathOption.hachureAngle = options.hachureAngle || -41;\r\n\t\t\tpathOption.hachureGap = options.hachureGap || 4;\r\n\t\t\t// pathOption.simplification = options.simplification || 1;\r\n\t\t}\r\n\t\tpathOption.curveStepCount = options.curveStepCount || 9;\r\n\t\t\r\n\t\tconsole.log(pathOption)\r\n\t\tthis._rc.path(svgPathStr, pathOption)\r\n\r\n\t\t// //----------------------------- rough sketch end\r\n\r\n\t},\r\n})\r\n\r\nL.Canvas.RoughCanvas = RoughCanvas\r\n\r\nL.Canvas.roughCanvas = () => {\r\n\treturn new RoughCanvas()\r\n}\r\n"],"names":["RoughCanvas"],"mappings":"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"}